[{"C:\\Users\\Gossett\\OneDrive\\Desktop\\Group8-project3\\client\\src\\index.js":"1","C:\\Users\\Gossett\\OneDrive\\Desktop\\Group8-project3\\client\\src\\App.js":"2","C:\\Users\\Gossett\\OneDrive\\Desktop\\Group8-project3\\client\\src\\pages\\Home.js":"3","C:\\Users\\Gossett\\OneDrive\\Desktop\\Group8-project3\\client\\src\\pages\\Chat.js":"4","C:\\Users\\Gossett\\OneDrive\\Desktop\\Group8-project3\\client\\src\\pages\\Swipe.js":"5","C:\\Users\\Gossett\\OneDrive\\Desktop\\Group8-project3\\client\\src\\pages\\Signup.js":"6","C:\\Users\\Gossett\\OneDrive\\Desktop\\Group8-project3\\client\\src\\pages\\Login.js":"7","C:\\Users\\Gossett\\OneDrive\\Desktop\\Group8-project3\\client\\src\\pages\\Profile.js":"8","C:\\Users\\Gossett\\OneDrive\\Desktop\\Group8-project3\\client\\src\\pages\\ChatHome.js":"9","C:\\Users\\Gossett\\OneDrive\\Desktop\\Group8-project3\\client\\src\\components\\header\\index.js":"10","C:\\Users\\Gossett\\OneDrive\\Desktop\\Group8-project3\\client\\src\\components\\Messages.js":"11","C:\\Users\\Gossett\\OneDrive\\Desktop\\Group8-project3\\client\\src\\utils\\auth.js":"12","C:\\Users\\Gossett\\OneDrive\\Desktop\\Group8-project3\\client\\src\\utils\\mutations.js":"13","C:\\Users\\Gossett\\OneDrive\\Desktop\\Group8-project3\\client\\src\\components\\SwipeCard.js":"14","C:\\Users\\Gossett\\OneDrive\\Desktop\\Group8-project3\\client\\src\\utils\\queries.js":"15","C:\\Users\\Gossett\\OneDrive\\Desktop\\Group8-project3\\client\\src\\components\\ImgUpload\\index.js":"16","C:\\Users\\Gossett\\OneDrive\\Desktop\\Group8-project3\\client\\src\\components\\info\\index.js":"17"},{"size":219,"mtime":1662024097534,"results":"18","hashOfConfig":"19"},{"size":3354,"mtime":1662079665505,"results":"20","hashOfConfig":"19"},{"size":711,"mtime":1662079665512,"results":"21","hashOfConfig":"19"},{"size":189,"mtime":1662079665511,"results":"22","hashOfConfig":"19"},{"size":209,"mtime":1662079665516,"results":"23","hashOfConfig":"19"},{"size":2737,"mtime":1662084365033,"results":"24","hashOfConfig":"19"},{"size":3453,"mtime":1662079665514,"results":"25","hashOfConfig":"19"},{"size":5884,"mtime":1662082369035,"results":"26","hashOfConfig":"19"},{"size":3270,"mtime":1662081969869,"results":"27","hashOfConfig":"19"},{"size":817,"mtime":1662079665509,"results":"28","hashOfConfig":"19"},{"size":3055,"mtime":1662079665506,"results":"29","hashOfConfig":"19"},{"size":853,"mtime":1662079665523,"results":"30","hashOfConfig":"19"},{"size":2072,"mtime":1662079665524,"results":"31","hashOfConfig":"19"},{"size":6961,"mtime":1662084119458,"results":"32","hashOfConfig":"19"},{"size":1164,"mtime":1662079665525,"results":"33","hashOfConfig":"19"},{"size":1701,"mtime":1662079665506,"results":"34","hashOfConfig":"19"},{"size":541,"mtime":1662081969869,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1ynsfiy",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\Gossett\\OneDrive\\Desktop\\Group8-project3\\client\\src\\index.js",[],["75","76"],"C:\\Users\\Gossett\\OneDrive\\Desktop\\Group8-project3\\client\\src\\App.js",[],"C:\\Users\\Gossett\\OneDrive\\Desktop\\Group8-project3\\client\\src\\pages\\Home.js",["77"],"import React, { useState } from 'react';\nimport { Navigate } from \"react-router-dom\";\nimport Auth from '../utils/auth';\nimport SwipeCard from '../components/SwipeCard'\n\nconst Home = () => {\n    return(\n        <div> \n            <div>\n                <SwipeCard/>\n            </div>\n\n            {Auth.loggedIn()\n                // Displays page info if logged in\n                ? (\n                    <div>\n                    </div>\n                ) : (\n                    <div>\n                        {/* Takes user to login page if not logged in */}\n                        <Navigate to='/login' replace={true} />\n                    </div>\n            )}\n        </div>\n    )\n};\n\nexport default Home;\n","C:\\Users\\Gossett\\OneDrive\\Desktop\\Group8-project3\\client\\src\\pages\\Chat.js",[],"C:\\Users\\Gossett\\OneDrive\\Desktop\\Group8-project3\\client\\src\\pages\\Swipe.js",[],"C:\\Users\\Gossett\\OneDrive\\Desktop\\Group8-project3\\client\\src\\pages\\Signup.js",[],"C:\\Users\\Gossett\\OneDrive\\Desktop\\Group8-project3\\client\\src\\pages\\Login.js",[],"C:\\Users\\Gossett\\OneDrive\\Desktop\\Group8-project3\\client\\src\\pages\\Profile.js",["78","79","80","81","82"],"import React from 'react';\nimport {useState} from 'react';\nimport { useParams, Navigate } from \"react-router-dom\";\nimport Auth from '../utils/auth';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { UPDATE_PET} from '../utils/mutations';\nimport { QUERY_OWNER_BY_ID, QUERY_PET} from '../utils/queries';\nimport ImgUpload from '../components/ImgUpload'\n\nconst Profile = () => {\n    let { id } = useParams();\n\n    const logout = (event) => {\n        event.preventDefault();\n        Auth.logout();\n    };\n\n    // useState to hold visibility\n    const [isVisible, setIsVisible] = useState(true);\n\n    // function to change visibility\n    const editPet = event => {\n        setIsVisible(current => !current);\n    };\n\n    const {loading, data} = useQuery(QUERY_OWNER_BY_ID, {variables: {_id: id}});\n\n    const petData = data?.owner || {};\n\n    // Takes pet info from db and sets to formState\n    // --------- TODO: TARGET PET INFO FROM DB FOR EACH PET DATA IN USESTATE -----------\n    const [formState, setFormState] = useState({ petName: '', petBreed: '', petAge: '', petNature: '', petGender: ''});\n    // const [updatePet, { error, data }] = useMutation(UPDATE_PET);\n\n    // update state based on form input changes\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n\n        setFormState({\n            ...formState,\n            [name]: value,\n        });\n    };\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        console.log(formState);\n\n        // try {\n        //   const { data } = await updatePet({\n        //     variables: { ...formState },\n        //   });\n        // } catch (e) {\n        //   console.error(e);\n        // }\n\n        setFormState({\n            // ---- TODO: Set to updated pet info -----\n            petName: '', \n            petBreed: '' , \n            petAge: '', \n            petNature: '', \n            petGender: ''  \n        })\n    };\n\n    return(\n        <div>\n            {Auth.loggedIn()\n                // Displays profile info if logged in\n                ? (\n                    <div>\n                        <h1>Welcome to your profile page!</h1>\n                        \n                            {/* Logout button */}\n                            <div>\n                        <h1>Your Profile Page</h1>\n                        <div>\n                            <ImgUpload />\n                            <button className='editPetButton btn btn-block btn-info' onClick={editPet}>\n                                Edit Pet Info\n                            </button>\n                        </div>\n                        {/* Form to update pet info */}\n                        <div className={`editPetForm ${isVisible ? 'hidden' : 'visible'}`}>\n                            <form onSubmit={handleFormSubmit}>\n                                <p> Pet's Name:</p>\n                                <input \n                                    className=\"form-input\"\n                                    name=\"petName\"\n                                    type=\"text\"\n                                    value={formState.petName}\n                                    onChange={handleChange}\n                                />\n                                <p> Breed:</p>\n                                <input \n                                    className=\"form-input\"\n                                    name=\"petBreed\"\n                                    type=\"text\"\n                                    value={formState.petBreed}\n                                    onChange={handleChange}\n                                />\n                                <p> Age:</p>\n                                <input \n                                    className=\"form-input\"\n                                    name=\"petAge\"\n                                    type=\"text\"\n                                    value={formState.petAge}\n                                    onChange={handleChange}\n                                />\n                                <p> Nature:</p>\n                                <input \n                                    className=\"form-input\"\n                                    name=\"petNature\"\n                                    type=\"text\"\n                                    value={formState.petNature}\n                                    onChange={handleChange}\n                                />\n                                <p> Gender:</p>\n                                <input \n                                    className=\"form-input\"\n                                    name=\"petGender\"\n                                    type=\"text\"\n                                    value={formState.petGender}\n                                    onChange={handleChange}\n                                />\n                                <button\n                                    className=\"btn btn-block btn-info\"\n                                    style={{ cursor: 'pointer' }}\n                                    type=\"submit\"\n                                >\n                                    Save changes\n                                </button>\n                            </form>\n                        </div>\n                        <br></br>\n                        <div>\n                            {/* Logout button */}\n                            <button onClick={logout}>\n                                Logout\n                            </button>\n                            </div>\n                        </div>\n                    </div>\n                ) : (\n                    <div>\n                        {/* Takes user to login page if not logged in */}\n                        <Navigate to='/login' replace={true} />\n                    </div>\n            )}\n        </div>\n    )\n}\n\nexport default Profile;","C:\\Users\\Gossett\\OneDrive\\Desktop\\Group8-project3\\client\\src\\pages\\ChatHome.js",[],"C:\\Users\\Gossett\\OneDrive\\Desktop\\Group8-project3\\client\\src\\components\\header\\index.js",[],"C:\\Users\\Gossett\\OneDrive\\Desktop\\Group8-project3\\client\\src\\components\\Messages.js",["83","84","85","86","87","88","89","90","91","92"],"import React, { useState } from 'react';\nimport Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport Paper from '@mui/material/Paper';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport Avatar from '@mui/material/Avatar';\nimport TextField from '@mui/material/TextField';\nimport { useNavigate } from 'react-router-dom';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { QUERY_MESSAGE, QUERY_CHAT } from '../utils/queries';\nimport { CREATE_MESSAGE } from '../utils/mutations';\nimport { useParams, Link } from 'react-router-dom';\nimport Auth from '../utils/auth';\nexport default function Messages() {\n    let { id } = useParams();\n    const userlo = Auth.getProfile().data._id\n    console.log(id)\n    const [formData, setFormData] = useState(\"\");\n    const { loading, data } = useQuery(QUERY_MESSAGE, {\n        variables: { chat: id, user: userlo },\n        pollInterval:300,\n      });\n  const [createMessage, { error }] = useMutation(CREATE_MESSAGE);\n  const messages = data?.message || [];\n\n \n  function Messagehandler(event){\n    event.preventDefault();\n    const { name, value,message } = event.target\n  setFormData(value)\n  console.log(formData)\n}\nconst Messagesubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const message = await createMessage({\n        variables:{\n        content: formData ,name:\"test\",user:userlo,chat:id\n      }});\n    } catch (err) {\n      console.error(err);\n    }\n\n}\n  return (\n    <Box sx={{ pb: 6 }} >\n      <CssBaseline />\n      {loading ? (\n        <div>Loading...</div>\n      ) : (\n      <List>\n        {messages.map(({ content, _id, user, name }, index) => (\n          <ListItem button key={_id}>\n            <ListItemAvatar>\n              <Avatar alt=\"Profile Picture\" />\n            </ListItemAvatar>\n            <ListItemText primary={name} secondary={content}/>\n          </ListItem>\n        ))}\n      </List>)}\n      {error && <div>Something went wrong...</div>}\n    \n      <Paper sx={{ position: 'fixed', bottom: 0, left: 0, right: 0 }} elevation={3}>\n      <form  onSubmit={Messagesubmit} >\n      <label>Enter your message:\n      <input onChange={Messagehandler}\n        type=\"text\" \n        name=\"message\"\n      />\n      </label>\n        <input type=\"submit\" />\n    </form>\n      </Paper>\n    </Box>\n  );\n}\n\nconst messageExamples = [\n  {\n    content: 'Brunch this week?',\n    secondary: \"I'll be in the neighbourhood this week. Let's grab a bite to eat\",\n    person: '/static/images/avatar/5.jpg',\n  },\n  {\n    content: 'Birthday Gift',\n    secondary: `Do you have a suggestion for a good present for John on his work\n      anniversary. I am really confused & would love your thoughts on it.`,\n    person: '/static/images/avatar/1.jpg',\n  },\n];","C:\\Users\\Gossett\\OneDrive\\Desktop\\Group8-project3\\client\\src\\utils\\auth.js",[],"C:\\Users\\Gossett\\OneDrive\\Desktop\\Group8-project3\\client\\src\\utils\\mutations.js",[],"C:\\Users\\Gossett\\OneDrive\\Desktop\\Group8-project3\\client\\src\\components\\SwipeCard.js",["93"],"import React, { useState, useMemo, useRef } from 'react'\n// import background from './Courses.PNG'\n// import TinderCard from '../react-tinder-card/index'\nimport TinderCard from 'react-tinder-card'\nimport Info from './info'\n\nconst db = [\n  {\n    name: 'Bill',\n    url: './test_images/Bill.jpg',\n    username: 'BillyBob',\n    interests: 'Bowling and coffee',\n    age: '54',\n    pet: {\n      pet_name: \"Scrappy Doo\",\n      breed: \"Mutt\",\n      age: \"1\",\n      nature: \"Hyper\",\n      gender: \"Male\"\n    }\n  },\n  {\n    name: 'Torrence',\n    url: './test_images/Torrence.jpg',\n    username: 'Torrence&Chaz',\n    age: '23',\n    interests: 'Latest fashion',\n    pet: {\n      pet_name: \"Chaz\",\n      breed: \"Buldog\",\n      age: \"3\",\n      nature: \"Lazy\",\n      gender: \"Male\"\n    }\n  },\n  {\n    name: 'Will',\n    url: './test_images/Will.jpg',\n    username: 'I am Legend',\n    age: '38',\n    interests: 'Mannequins',\n    pet: {\n      pet_name: \"Sam\",\n      breed: \"German Shepherd\",\n      age: \"4\",\n      nature: \"Well Trained\",\n      gender: \"Female\"\n    }\n  },\n  {\n    name: 'Ray',\n    url: './test_images/Ray.jpg',\n    username: 'MantaRay',\n    interests: 'House Decoration',\n    age: '32',\n    pet: {\n      pet_name: \"Marshmallow\",\n      breed: \"Husky\",\n      age: \"4\",\n      nature: \"Sleepy\",\n      gender: \"Female\"\n    }\n  },\n  {\n    name: 'Jill',\n    url: './test_images/Jill.jpg',\n    username: 'Jill on a Hill',\n    interests: 'Gardening!',\n    age: '32',\n    pet: {\n      pet_name: \"Daisy\",\n      breed: \"Labrador\",\n      age: \"5\",\n      nature: \"Calm\",\n      gender: \"Female\"\n    }\n  },\n    {\n\n    name: 'Richard Hendricks',\n    url: './test_images/richard.jpg',\n    username: 'KingRich',\n    interests: 'Coding',\n    age:'150',\n    pet: {\n      pet_name:\"Pikachu\",\n      url:''\n    }\n  },\n  {\n    name: 'Erlich Bachman',\n    url: './test_images/erlich.jpg'\n  },\n  {\n    name: 'Monica Hall',\n    url: './test_images/monica.jpg'\n  },\n  {\n    name: 'Jared Dunn',\n    url: './test_images/jared.jpg'\n  },\n  {\n    name: 'Dinesh Chugtai',\n    url: './test_images/dinesh.jpg'\n  },\n  {\n    name: 'Bill',\n    url: './test_images/Bill.jpg'\n  },\n  {\n    name: 'Torrence',\n    url: './test_images/Torrence.jpg'\n  },\n  {\n    name: 'Will',\n    url: './test_images/Will.jpg'\n  },\n  {\n    name: 'Ray',\n    url: './test_images/Ray.jpg'\n  },\n  {\n    name: 'Jill',\n    url: './test_images/Jill.jpg'\n  },\n\n{\n  name: 'Pikachu',\n  url: './test_images/pikachu.jpg'\n},\n{\n  name: 'lizzy',\n  url: './test_images/lizzy.jpg'\n},\n{\n  name: 'lonny',\n  url: './test_images/lizard.jpg'\n},\n{\n  name: 'Bunny',\n  url: './test_images/bunny.jpg'\n}\n]\n\nfunction SwipeCard () {\n  const [currentIndex, setCurrentIndex] = useState(db.length - 1)\n  const [lastDirection, setLastDirection] = useState()\n  // used for outOfFrame closure\n  const currentIndexRef = useRef(currentIndex)\n  const childRefs = useMemo(\n    () =>\n      Array(db.length)\n        .fill(0)\n        .map((i) => React.createRef()),\n    []\n  )\n  const updateCurrentIndex = (val) => {\n    setCurrentIndex(val)\n    currentIndexRef.current = val\n  }\n  const canGoBack = currentIndex < db.length - 1\n  const canSwipe = currentIndex >= 0\n  // set last direction and decrease current index\n  const swiped = (direction, nameToDelete, index) => {\n    setLastDirection(direction)\n    updateCurrentIndex(index - 1)\n  }\n  const outOfFrame = (name, idx) => {\n    console.log(`${name} (${idx}) left the screen!`, currentIndexRef.current)\n    // handle the case in which go back is pressed before card goes outOfFrame\n    currentIndexRef.current >= idx && childRefs[idx].current.restoreCard()\n    // TODO: when quickly swipe and restore multiple times the same card,\n    // it happens multiple outOfFrame events are queued and the card disappear\n    // during latest swipes. Only the last outOfFrame event should be considered valid\n  }\n  const swipe = async (dir) => {\n    if (canSwipe && currentIndex < db.length) {\n      await childRefs[currentIndex].current.swipe(dir) // Swipe the card!\n    }\n  }\n  // increase current index and show card\n  const goBack = async () => {\n    if (!canGoBack) return\n    const newIndex = currentIndex + 1\n    updateCurrentIndex(newIndex)\n    await childRefs[newIndex].current.restoreCard()\n  }\n\n  // useState to hold visibility\n  const [isVisible, setIsVisible] = useState(true);\n\n  // function to change visibility\n  const showInfo = event => {\n    setIsVisible(current => !current);\n  };\n\n  \n  return (\n    <div>\n      <link\n        href='https://fonts.googleapis.com/css?family=Damion&display=swap'\n        rel='stylesheet'\n      />\n      <link\n        href='https://fonts.googleapis.com/css?family=Alatsi&display=swap'\n        rel='stylesheet'\n      />\n      <h1>Meet New PlayPals!</h1>\n      <div className='cardContainer'>\n        {db.map((owner, index) => (\n          <div>\n          <TinderCard\n            ref={childRefs[index]}\n            className='swipe'\n            key={owner.name}\n            onSwipe={(dir) => swiped(dir, owner.name, index)}\n            onCardLeftScreen={() => outOfFrame(owner.name, index)}\n          >\n            <div\n              style={{ backgroundImage: `url(${owner.url})` }}\n              className='card'\n            >\n            <div className={`ownerInfo ${isVisible ? 'hidden' : 'visible'}`}>\n              <div>\n                <ul>\n                    Pet Info\n                    <li>Pet's Name: {owner.pet.pet_name}</li>\n                    <li>Pet's Breed: {owner.pet.breed}</li>\n                    <li>Pet's Age: {owner.pet.age}</li>\n                    <li>Pet's Nature: {owner.pet.nature}</li>\n                    <li>Pet's Gender: {owner.pet.gender}</li>\n                </ul>\n                <ul>\n                    Owner Info\n                    <li>Username: {owner.name}</li>\n                    <li>Age: {owner.age}</li>\n                    <li>Interests: {owner.interests}</li>\n                </ul>\n              </div>\n            </div>\n              <h3 className=\"name\">{owner.name}</h3>\n            </div>\n          </TinderCard>\n            </div>\n        ))}\n\n      </div>\n<br></br>\n      {/* Button to show current user's info */}\n      <button className='showOwnerInfo btn btn-info' onClick={showInfo}>\n        <h3>ℹ️</h3>\n      </button> \n\n      <div className='buttons'>\n        <button style={{ backgroundColor: !canSwipe && '#C3C4D3' }} onClick={() => swipe('left')}>❌ Swipe left!</button>\n        <button style={{ backgroundColor: !canGoBack && '#C3C4D3' }} onClick={() => goBack()}>Undo!</button>\n        <button style={{ backgroundColor: !canSwipe && '#C3C4D3' }} onClick={() => swipe('right')}>✅ Swipe right!</button>\n      </div>\n      {lastDirection ? (\n        <h2 key={lastDirection} className='infoText'>\n          You swiped {lastDirection}\n        </h2>\n      ) : (\n        <h2 className='infoText'>\n          Swipe Left to pass! Swipe right to Match!\n        </h2>\n      )}\n    </div>\n  )\n}\nexport default SwipeCard","C:\\Users\\Gossett\\OneDrive\\Desktop\\Group8-project3\\client\\src\\utils\\queries.js",[],"C:\\Users\\Gossett\\OneDrive\\Desktop\\Group8-project3\\client\\src\\components\\ImgUpload\\index.js",[],"C:\\Users\\Gossett\\OneDrive\\Desktop\\Group8-project3\\client\\src\\components\\info\\index.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":25},{"ruleId":"98","severity":1,"message":"102","line":5,"column":10,"nodeType":"100","messageId":"101","endLine":5,"endColumn":21},{"ruleId":"98","severity":1,"message":"103","line":6,"column":10,"nodeType":"100","messageId":"101","endLine":6,"endColumn":20},{"ruleId":"98","severity":1,"message":"104","line":7,"column":29,"nodeType":"100","messageId":"101","endLine":7,"endColumn":38},{"ruleId":"98","severity":1,"message":"105","line":26,"column":12,"nodeType":"100","messageId":"101","endLine":26,"endColumn":19},{"ruleId":"98","severity":1,"message":"106","line":28,"column":11,"nodeType":"100","messageId":"101","endLine":28,"endColumn":18},{"ruleId":"98","severity":1,"message":"107","line":4,"column":8,"nodeType":"100","messageId":"101","endLine":4,"endColumn":24},{"ruleId":"98","severity":1,"message":"108","line":5,"column":8,"nodeType":"100","messageId":"101","endLine":5,"endColumn":30},{"ruleId":"98","severity":1,"message":"109","line":12,"column":8,"nodeType":"100","messageId":"101","endLine":12,"endColumn":17},{"ruleId":"98","severity":1,"message":"110","line":13,"column":10,"nodeType":"100","messageId":"101","endLine":13,"endColumn":21},{"ruleId":"98","severity":1,"message":"111","line":15,"column":25,"nodeType":"100","messageId":"101","endLine":15,"endColumn":35},{"ruleId":"98","severity":1,"message":"112","line":17,"column":21,"nodeType":"100","messageId":"101","endLine":17,"endColumn":25},{"ruleId":"98","severity":1,"message":"113","line":34,"column":13,"nodeType":"100","messageId":"101","endLine":34,"endColumn":17},{"ruleId":"98","severity":1,"message":"114","line":34,"column":25,"nodeType":"100","messageId":"101","endLine":34,"endColumn":32},{"ruleId":"98","severity":1,"message":"114","line":41,"column":13,"nodeType":"100","messageId":"101","endLine":41,"endColumn":20},{"ruleId":"98","severity":1,"message":"115","line":83,"column":7,"nodeType":"100","messageId":"101","endLine":83,"endColumn":22},{"ruleId":"98","severity":1,"message":"116","line":5,"column":8,"nodeType":"100","messageId":"101","endLine":5,"endColumn":12},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useMutation' is defined but never used.","'UPDATE_PET' is defined but never used.","'QUERY_PET' is defined but never used.","'loading' is assigned a value but never used.","'petData' is assigned a value but never used.","'BottomNavigation' is defined but never used.","'BottomNavigationAction' is defined but never used.","'TextField' is defined but never used.","'useNavigate' is defined but never used.","'QUERY_CHAT' is defined but never used.","'Link' is defined but never used.","'name' is assigned a value but never used.","'message' is assigned a value but never used.","'messageExamples' is assigned a value but never used.","'Info' is defined but never used.","no-global-assign","no-unsafe-negation"]