[{"C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\index.js":"1","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\App.js":"2","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\pages\\Profile.js":"3","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\pages\\Home.js":"4","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\pages\\Signup.js":"5","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\pages\\Login.js":"6","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\pages\\Chat.js":"7","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\pages\\ChatHome.js":"8","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\pages\\Swipe.js":"9","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\components\\SwipeCard.js":"10","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\utils\\auth.js":"11","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\utils\\mutations.js":"12","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\components\\header\\index.js":"13","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\components\\Messages.js":"14","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\components\\ImgUpload\\index.js":"15","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\utils\\queries.js":"16","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\components\\info\\index.js":"17"},{"size":219,"mtime":1662066691906,"results":"18","hashOfConfig":"19"},{"size":3354,"mtime":1662060307227,"results":"20","hashOfConfig":"19"},{"size":5854,"mtime":1662059867866,"results":"21","hashOfConfig":"19"},{"size":749,"mtime":1662067165093,"results":"22","hashOfConfig":"19"},{"size":2733,"mtime":1662058700808,"results":"23","hashOfConfig":"19"},{"size":3453,"mtime":1662060307230,"results":"24","hashOfConfig":"19"},{"size":189,"mtime":1661988190020,"results":"25","hashOfConfig":"19"},{"size":672,"mtime":1661957941353,"results":"26","hashOfConfig":"19"},{"size":209,"mtime":1662060307231,"results":"27","hashOfConfig":"19"},{"size":4267,"mtime":1662067982449,"results":"28","hashOfConfig":"19"},{"size":807,"mtime":1661962137691,"results":"29","hashOfConfig":"19"},{"size":2041,"mtime":1662060360729,"results":"30","hashOfConfig":"19"},{"size":817,"mtime":1662059588482,"results":"31","hashOfConfig":"19"},{"size":2837,"mtime":1662060307228,"results":"32","hashOfConfig":"19"},{"size":1780,"mtime":1662060143701,"results":"33","hashOfConfig":"19"},{"size":1111,"mtime":1662066901160,"results":"34","hashOfConfig":"19"},{"size":566,"mtime":1662068807523,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1l84no8",{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\index.js",[],"C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\App.js",[],["73","74"],"C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\pages\\Profile.js",["75","76","77","78","79","80"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport {useState} from 'react';\r\nimport { useParams, Navigate } from \"react-router-dom\";\r\nimport Auth from '../utils/auth';\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { UPDATE_PET} from '../utils/mutations';\r\nimport { QUERY_OWNER_BY_ID, QUERY_PET} from '../utils/queries';\r\nimport ImgUpload from '../components/ImgUpload'\r\n\r\nconst Profile = () => {\r\n    let { id } = useParams();\r\n\r\n    const logout = (event) => {\r\n        event.preventDefault();\r\n        Auth.logout();\r\n    };\r\n\r\n    // useState to hold visibility\r\n    const [isVisible, setIsVisible] = useState(true);\r\n\r\n    // function to change visibility\r\n    const editPet = event => {\r\n        setIsVisible(current => !current);\r\n    };\r\n\r\n    const {loading, data} = useQuery(QUERY_OWNER_BY_ID, {variables: {_id: id}});\r\n\r\n    const petData = data?.owner || {};\r\n\r\n    // Takes pet info from db and sets to formState\r\n    // --------- TODO: TARGET PET INFO FROM DB FOR EACH PET DATA IN USESTATE -----------\r\n    const [formState, setFormState] = useState({ petName: '', petBreed: '', petAge: '', petNature: '', petGender: ''});\r\n    // const [updatePet, { error, data }] = useMutation(UPDATE_PET);\r\n\r\n    // update state based on form input changes\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n\r\n        setFormState({\r\n            ...formState,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n        console.log(formState);\r\n\r\n        // try {\r\n        //   const { data } = await updatePet({\r\n        //     variables: { ...formState },\r\n        //   });\r\n        // } catch (e) {\r\n        //   console.error(e);\r\n        // }\r\n\r\n        setFormState({\r\n            // ---- TODO: Set to updated pet info -----\r\n            petName: '', \r\n            petBreed: '' , \r\n            petAge: '', \r\n            petNature: '', \r\n            petGender: ''  \r\n        })\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            {Auth.loggedIn()\r\n                // Displays profile info if logged in\r\n                ? (\r\n                    <div>\r\n                        <h1>Your Profile Page</h1>\r\n                        <div>\r\n                            <ImgUpload />\r\n                            <button className='editPetButton btn btn-block btn-info' onClick={editPet}>\r\n                                Edit Pet Info\r\n                            </button>\r\n                        </div>\r\n                        {/* Form to update pet info */}\r\n                        <div className={`editPetForm ${isVisible ? 'hidden' : 'visible'}`}>\r\n                            <form onSubmit={handleFormSubmit}>\r\n                                <p> Pet's Name:</p>\r\n                                <input \r\n                                    className=\"form-input\"\r\n                                    name=\"petName\"\r\n                                    type=\"text\"\r\n                                    value={formState.petName}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                <p> Breed:</p>\r\n                                <input \r\n                                    className=\"form-input\"\r\n                                    name=\"petBreed\"\r\n                                    type=\"text\"\r\n                                    value={formState.petBreed}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                <p> Age:</p>\r\n                                <input \r\n                                    className=\"form-input\"\r\n                                    name=\"petAge\"\r\n                                    type=\"text\"\r\n                                    value={formState.petAge}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                <p> Nature:</p>\r\n                                <input \r\n                                    className=\"form-input\"\r\n                                    name=\"petNature\"\r\n                                    type=\"text\"\r\n                                    value={formState.petNature}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                <p> Gender:</p>\r\n                                <input \r\n                                    className=\"form-input\"\r\n                                    name=\"petGender\"\r\n                                    type=\"text\"\r\n                                    value={formState.petGender}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                <button\r\n                                    className=\"btn btn-block btn-info\"\r\n                                    style={{ cursor: 'pointer' }}\r\n                                    type=\"submit\"\r\n                                >\r\n                                    Save changes\r\n                                </button>\r\n                            </form>\r\n                        </div>\r\n                        <br></br>\r\n                        <div>\r\n                            {/* Logout button */}\r\n                            <button onClick={logout}>\r\n                                Logout\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        {/* Takes user to login page if not logged in */}\r\n                        <Navigate to='/login' replace={true} />\r\n                    </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\pages\\Home.js",["81","82"],"C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\pages\\Signup.js",[],"C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\pages\\Login.js",[],"C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\pages\\Chat.js",[],"C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\pages\\ChatHome.js",[],"C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\pages\\Swipe.js",[],"C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\components\\SwipeCard.js",[],"C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\utils\\auth.js",[],"C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\utils\\mutations.js",[],"C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\components\\header\\index.js",[],"C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\components\\Messages.js",["83","84","85","86","87","88","89","90","91","92","93"],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport Paper from '@mui/material/Paper';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport Avatar from '@mui/material/Avatar';\nimport TextField from '@mui/material/TextField';\nimport { useNavigate } from 'react-router-dom';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { QUERY_MESSAGE, QUERY_CHAT } from '../utils/queries';\nimport { CREATE_MESSAGE } from '../utils/mutations';\nimport { useParams, Link } from 'react-router-dom';\n\nfunction refreshMessages() {\n  const getRandomInt = (max) => Math.floor(Math.random() * Math.floor(max));\n\n  return Array.from(new Array(10)).map(\n    () => messageExamples[getRandomInt(messageExamples.length)],\n  );\n}\n\nexport default function Messages() {\n    let { id } = useParams();\n    const { loading, data } = useQuery(QUERY_MESSAGE, {\n        variables: { chat: id, user: id },\n      });\n  const [createMessage, { error }] = useMutation(CREATE_MESSAGE);\n  const messages = data?.message || [];\n\n  const [value, setValue] = React.useState(0);\n  const ref = React.useRef(null);\n  const [messages1, setMessages] = React.useState(() => refreshMessages());\n  \n\n  React.useEffect(() => {\n    ref.current.ownerDocument.body.scrollTop = 0;\n    setMessages(refreshMessages());\n  }, [value, setMessages]);\n\n  return (\n    <Box sx={{ pb: 6 }} ref={ref}>\n      <CssBaseline />\n      <List>\n        {messages.map(({ primary, secondary, person }, index) => (\n          <ListItem button key={index + person}>\n            <ListItemAvatar>\n              <Avatar alt=\"Profile Picture\" src={person} />\n            </ListItemAvatar>\n            <ListItemText primary={primary} secondary={secondary} />\n          </ListItem>\n        ))}\n      </List>\n    \n      <Paper sx={{ position: 'fixed', bottom: 0, left: 0, right: 0 }} elevation={3}>\n      <form >\n      <label>Enter your message:\n      <input \n        type=\"text\" \n        name=\"message\" \n      />\n      </label>\n        <input type=\"submit\" />\n    </form>\n      </Paper>\n    </Box>\n  );\n}\n\nconst messageExamples = [\n  {\n    primary: 'Brunch this week?',\n    secondary: \"I'll be in the neighbourhood this week. Let's grab a bite to eat\",\n    person: '/static/images/avatar/5.jpg',\n  },\n  {\n    primary: 'Birthday Gift',\n    secondary: `Do you have a suggestion for a good present for John on his work\n      anniversary. I am really confused & would love your thoughts on it.`,\n    person: '/static/images/avatar/1.jpg',\n  },\n];","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\components\\ImgUpload\\index.js",[],"C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\utils\\queries.js",[],"C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\components\\info\\index.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":2,"column":8,"nodeType":"100","messageId":"101","endLine":2,"endColumn":13},{"ruleId":"98","severity":1,"message":"102","line":6,"column":10,"nodeType":"100","messageId":"101","endLine":6,"endColumn":21},{"ruleId":"98","severity":1,"message":"103","line":7,"column":10,"nodeType":"100","messageId":"101","endLine":7,"endColumn":20},{"ruleId":"98","severity":1,"message":"104","line":8,"column":29,"nodeType":"100","messageId":"101","endLine":8,"endColumn":38},{"ruleId":"98","severity":1,"message":"105","line":27,"column":12,"nodeType":"100","messageId":"101","endLine":27,"endColumn":19},{"ruleId":"98","severity":1,"message":"106","line":29,"column":11,"nodeType":"100","messageId":"101","endLine":29,"endColumn":18},{"ruleId":"98","severity":1,"message":"107","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":25},{"ruleId":"98","severity":1,"message":"108","line":5,"column":8,"nodeType":"100","messageId":"101","endLine":5,"endColumn":12},{"ruleId":"98","severity":1,"message":"109","line":4,"column":8,"nodeType":"100","messageId":"101","endLine":4,"endColumn":24},{"ruleId":"98","severity":1,"message":"110","line":5,"column":8,"nodeType":"100","messageId":"101","endLine":5,"endColumn":30},{"ruleId":"98","severity":1,"message":"111","line":12,"column":8,"nodeType":"100","messageId":"101","endLine":12,"endColumn":17},{"ruleId":"98","severity":1,"message":"112","line":13,"column":10,"nodeType":"100","messageId":"101","endLine":13,"endColumn":21},{"ruleId":"98","severity":1,"message":"113","line":15,"column":25,"nodeType":"100","messageId":"101","endLine":15,"endColumn":35},{"ruleId":"98","severity":1,"message":"114","line":17,"column":21,"nodeType":"100","messageId":"101","endLine":17,"endColumn":25},{"ruleId":"98","severity":1,"message":"105","line":29,"column":13,"nodeType":"100","messageId":"101","endLine":29,"endColumn":20},{"ruleId":"98","severity":1,"message":"115","line":32,"column":10,"nodeType":"100","messageId":"101","endLine":32,"endColumn":23},{"ruleId":"98","severity":1,"message":"116","line":32,"column":27,"nodeType":"100","messageId":"101","endLine":32,"endColumn":32},{"ruleId":"98","severity":1,"message":"117","line":35,"column":17,"nodeType":"100","messageId":"101","endLine":35,"endColumn":25},{"ruleId":"98","severity":1,"message":"118","line":37,"column":10,"nodeType":"100","messageId":"101","endLine":37,"endColumn":19},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'useMutation' is defined but never used.","'UPDATE_PET' is defined but never used.","'QUERY_PET' is defined but never used.","'loading' is assigned a value but never used.","'petData' is assigned a value but never used.","'useState' is defined but never used.","'Info' is defined but never used.","'BottomNavigation' is defined but never used.","'BottomNavigationAction' is defined but never used.","'TextField' is defined but never used.","'useNavigate' is defined but never used.","'QUERY_CHAT' is defined but never used.","'Link' is defined but never used.","'createMessage' is assigned a value but never used.","'error' is assigned a value but never used.","'setValue' is assigned a value but never used.","'messages1' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]