[{"C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\index.js":"1","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\App.js":"2","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\pages\\Profile.js":"3","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\pages\\Home.js":"4","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\pages\\Signup.js":"5","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\pages\\Login.js":"6","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\pages\\Chat.js":"7","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\pages\\ChatHome.js":"8","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\pages\\Swipe.js":"9","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\components\\SwipeCard.js":"10","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\utils\\auth.js":"11","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\utils\\mutations.js":"12","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\components\\header\\index.js":"13","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\components\\Messages.js":"14","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\components\\ImgUpload\\index.js":"15","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\utils\\queries.js":"16","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\components\\info\\index.js":"17"},{"size":219,"mtime":1662066691906,"results":"18","hashOfConfig":"19"},{"size":3354,"mtime":1662060307227,"results":"20","hashOfConfig":"19"},{"size":5698,"mtime":1662087169751,"results":"21","hashOfConfig":"19"},{"size":667,"mtime":1662087144608,"results":"22","hashOfConfig":"19"},{"size":2733,"mtime":1662058700808,"results":"23","hashOfConfig":"19"},{"size":2992,"mtime":1662087152681,"results":"24","hashOfConfig":"19"},{"size":189,"mtime":1661988190020,"results":"25","hashOfConfig":"19"},{"size":3270,"mtime":1662076624560,"results":"26","hashOfConfig":"19"},{"size":209,"mtime":1662060307231,"results":"27","hashOfConfig":"19"},{"size":5911,"mtime":1662087054926,"results":"28","hashOfConfig":"19"},{"size":853,"mtime":1662075786577,"results":"29","hashOfConfig":"19"},{"size":2072,"mtime":1662075786578,"results":"30","hashOfConfig":"19"},{"size":817,"mtime":1662059588482,"results":"31","hashOfConfig":"19"},{"size":3089,"mtime":1662087415855,"results":"32","hashOfConfig":"19"},{"size":1780,"mtime":1662060143701,"results":"33","hashOfConfig":"19"},{"size":1164,"mtime":1662075786579,"results":"34","hashOfConfig":"19"},{"size":565,"mtime":1662073657167,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1l84no8",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\index.js",[],["74","75"],"C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\App.js",[],"C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\pages\\Profile.js",["76","77"],"import React from 'react';\n// import axios from 'axios';\nimport {useState} from 'react';\nimport { useParams, Navigate } from \"react-router-dom\";\nimport Auth from '../utils/auth';\nimport { useQuery } from '@apollo/client';\n// import { UPDATE_PET} from '../utils/mutations';\nimport { QUERY_OWNER_BY_ID} from '../utils/queries';\nimport ImgUpload from '../components/ImgUpload'\n\nconst Profile = () => {\n    let { id } = useParams();\n\n    const logout = (event) => {\n        event.preventDefault();\n        Auth.logout();\n    };\n\n    // useState to hold visibility\n    const [isVisible, setIsVisible] = useState(true);\n\n    // function to change visibility\n    const editPet = event => {\n        setIsVisible(current => !current);\n    };\n\n    const {loading, data} = useQuery(QUERY_OWNER_BY_ID, {variables: {_id: id}});\n\n    const petData = data?.owner || {};\n\n    // Takes pet info from db and sets to formState\n    // --------- TODO: TARGET PET INFO FROM DB FOR EACH PET DATA IN USESTATE -----------\n    const [formState, setFormState] = useState({ petName: '', petBreed: '', petAge: '', petNature: '', petGender: ''});\n    // const [updatePet, { error, data }] = useMutation(UPDATE_PET);\n\n    // update state based on form input changes\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n\n        setFormState({\n            ...formState,\n            [name]: value,\n        });\n    };\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        console.log(formState);\n\n        // try {\n        //   const { data } = await updatePet({\n        //     variables: { ...formState },\n        //   });\n        // } catch (e) {\n        //   console.error(e);\n        // }\n\n        setFormState({\n            // ---- TODO: Set to updated pet info -----\n            petName: '', \n            petBreed: '' , \n            petAge: '', \n            petNature: '', \n            petGender: ''  \n        })\n    };\n\n    return(\n        <div>\n            {Auth.loggedIn()\n                // Displays profile info if logged in\n                ? (\n                    <div>\n                        <h1>Welcome to your profile page!</h1>\n                        <div>\n                            <ImgUpload />\n                            <button className='editPetButton btn btn-block btn-info' onClick={editPet}>\n                                Edit Pet Info\n                            </button>\n                        </div>\n                        {/* Form to update pet info */}\n                        <div className={`editPetForm ${isVisible ? 'hidden' : 'visible'}`}>\n                            <form onSubmit={handleFormSubmit}>\n                                <p> Pet's Name:</p>\n                                <input \n                                    className=\"form-input\"\n                                    name=\"petName\"\n                                    type=\"text\"\n                                    value={formState.petName}\n                                    onChange={handleChange}\n                                />\n                                <p> Breed:</p>\n                                <input \n                                    className=\"form-input\"\n                                    name=\"petBreed\"\n                                    type=\"text\"\n                                    value={formState.petBreed}\n                                    onChange={handleChange}\n                                />\n                                <p> Age:</p>\n                                <input \n                                    className=\"form-input\"\n                                    name=\"petAge\"\n                                    type=\"text\"\n                                    value={formState.petAge}\n                                    onChange={handleChange}\n                                />\n                                <p> Nature:</p>\n                                <input \n                                    className=\"form-input\"\n                                    name=\"petNature\"\n                                    type=\"text\"\n                                    value={formState.petNature}\n                                    onChange={handleChange}\n                                />\n                                <p> Gender:</p>\n                                <input \n                                    className=\"form-input\"\n                                    name=\"petGender\"\n                                    type=\"text\"\n                                    value={formState.petGender}\n                                    onChange={handleChange}\n                                />\n                                <button\n                                    className=\"btn btn-block btn-info\"\n                                    style={{ cursor: 'pointer' }}\n                                    type=\"submit\"\n                                >\n                                    Save changes\n                                </button>\n                            </form>\n                        </div>\n                        <br></br>\n                        <div>\n                            {/* Logout button */}\n                            <button onClick={logout}>\n                                Logout\n                            </button>\n                        </div>\n                    </div>\n                ) : (\n                    <div>\n                        {/* Takes user to login page if not logged in */}\n                        <Navigate to='/login' replace={true} />\n                    </div>\n            )}\n        </div>\n    )\n}\n\nexport default Profile;","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\pages\\Home.js",[],"C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\pages\\Signup.js",[],"C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\pages\\Login.js",[],"C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\pages\\Chat.js",[],"C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\pages\\ChatHome.js",[],"C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\pages\\Swipe.js",[],"C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\components\\SwipeCard.js",[],"C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\utils\\auth.js",[],"C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\utils\\mutations.js",[],"C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\components\\header\\index.js",[],"C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\components\\Messages.js",["78","79","80"],"import React, { useState } from 'react';\nimport Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline';\n// import BottomNavigation from '@mui/material/BottomNavigation';\n// import BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport Paper from '@mui/material/Paper';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport Avatar from '@mui/material/Avatar';\n// import TextField from '@mui/material/TextField';\n// import { useNavigate } from 'react-router-dom';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { QUERY_MESSAGE } from '../utils/queries';\nimport { CREATE_MESSAGE } from '../utils/mutations';\nimport { useParams } from 'react-router-dom';\nimport Auth from '../utils/auth';\nexport default function Messages() {\n    let { id } = useParams();\n    const userlo = Auth.getProfile().data._id\n    console.log(id)\n    const [formData, setFormData] = useState(\"\");\n    const { loading, data } = useQuery(QUERY_MESSAGE, {\n        variables: { chat: id, user: userlo },\n        pollInterval:300,\n      });\n  const [createMessage, { error }] = useMutation(CREATE_MESSAGE);\n  const messages = data?.message || [];\n\n \n  function Messagehandler(event){\n    event.preventDefault();\n    const { name, value, message } = event.target\n  setFormData(value)\n  console.log(formData)\n}\nconst Messagesubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const message = await createMessage({\n        variables:{\n        content: formData ,name:\"test\",user:userlo,chat:id\n      }});\n    } catch (err) {\n      console.error(err);\n    }\n\n}\n  return (\n    <Box sx={{ pb: 6 }} >\n      <CssBaseline />\n      {loading ? (\n        <div>Loading...</div>\n      ) : (\n      <List>\n        {messages.map(({ content, _id, user, name }, index) => (\n          <ListItem button key={_id}>\n            <ListItemAvatar>\n              <Avatar alt=\"Profile Picture\" />\n            </ListItemAvatar>\n            <ListItemText primary={name} secondary={content}/>\n          </ListItem>\n        ))}\n      </List>)}\n      {error && <div>Something went wrong...</div>}\n    \n      <Paper sx={{ position: 'fixed', bottom: 0, left: 0, right: 0 }} elevation={3}>\n      <form  onSubmit={Messagesubmit} >\n      <label>Enter your message:\n      <input onChange={Messagehandler}\n        type=\"text\" \n        name=\"message\"\n      />\n      </label>\n        <input type=\"submit\" />\n    </form>\n      </Paper>\n    </Box>\n  );\n}\n\n// const messageExamples = [\n//   {\n//     content: 'Brunch this week?',\n//     secondary: \"I'll be in the neighbourhood this week. Let's grab a bite to eat\",\n//     person: '/static/images/avatar/5.jpg',\n//   },\n//   {\n//     content: 'Birthday Gift',\n//     secondary: `Do you have a suggestion for a good present for John on his work\n//       anniversary. I am really confused & would love your thoughts on it.`,\n//     person: '/static/images/avatar/1.jpg',\n//   },\n// ];","C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\components\\ImgUpload\\index.js",[],"C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\utils\\queries.js",[],"C:\\Users\\tshad\\OneDrive\\Desktop\\Coding Bootcamp\\Group8-project3\\client\\src\\components\\info\\index.js",[],["81","82"],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":27,"column":12,"nodeType":"89","messageId":"90","endLine":27,"endColumn":19},{"ruleId":"87","severity":1,"message":"91","line":29,"column":11,"nodeType":"89","messageId":"90","endLine":29,"endColumn":18},{"ruleId":"87","severity":1,"message":"92","line":34,"column":13,"nodeType":"89","messageId":"90","endLine":34,"endColumn":17},{"ruleId":"87","severity":1,"message":"93","line":34,"column":26,"nodeType":"89","messageId":"90","endLine":34,"endColumn":33},{"ruleId":"87","severity":1,"message":"93","line":41,"column":13,"nodeType":"89","messageId":"90","endLine":41,"endColumn":20},{"ruleId":"83","replacedBy":"94"},{"ruleId":"85","replacedBy":"95"},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'petData' is assigned a value but never used.","'name' is assigned a value but never used.","'message' is assigned a value but never used.",["96"],["97"],"no-global-assign","no-unsafe-negation"]